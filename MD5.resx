<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>